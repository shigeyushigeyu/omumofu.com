---
// src/pages/thread/[id].astro
export const prerender = false; // ★このページだけSSRにする、という宣言は必須

import Layout from '../../layouts/Layout.astro';
import { getDbClient } from '../../lib/db'; // 共通のDB接続ヘルパーを使う

const { id } = Astro.params;

let thread = null;
let posts = [];
let pageError = null;

try {
  if (!id) {
    throw new Error("URLにスレッドIDがありません。");
  }

  // messageboard.astroと全く同じ方法でDBに接続
  
  try {
    const client = getDbClient();
    await client.connect();
    
    // スレッド情報を取得
    const threadResult = await client.query('SELECT id, title FROM threads WHERE id = $1', [id]);
    thread = threadResult.rows;

    // 投稿一覧を取得
    const postsResult = await client.query('SELECT author_name, body, created_at FROM posts WHERE thread_id = $1 ORDER BY created_at ASC', [id]);
    posts = postsResult.rows;
    
    await client.end();

  } finally {
    // 成功しても失敗しても、必ず接続を閉じる
   
  }

} catch (e) {
  console.error(`Error in thread/${id}.astro:`, e);
  pageError = e;
}
---
<Layout title={pageError ? "サーバーエラー" : (thread ? thread.title : 'スレッドが見つかりません')}>
  <main>
    {pageError ? (
      <div>
        <h1>サーバーでエラーが発生しました</h1>
        <pre>{JSON.stringify(pageError, Object.getOwnPropertyNames(pageError), 2)}</pre>
      </div>
    ) : (
      <>
        {thread ? (
          <>
            <h1>{thread.title}</h1>
            <div class="posts-container">
              {posts.map((post, index) => (
                <div class="post">
                  <p><strong>{index + 1}. {post.author_name}</strong> - {new Date(post.created_at).toLocaleString()}</p>
                  <p set:html={post.body.replace(/\n/g, '<br>')} />
                </div>
              ))}
              {posts.length === 0 && <p>このスレッドにはまだ投稿がありません。</p>}
            </div>
            <hr />
            <h2>書き込む</h2>
            <form method="POST" action="/api/posts" enctype="application/x-www-form-urlencoded">
              <input type="hidden" name="thread_id" value={thread.id} />
              {/* ...フォーム入力欄... */}
              <div>
                <label for="author_name">名前:</label>
                <input type="text" id="author_name" name="author_name" placeholder="名無しさん" />
              </div>
              <div>
                <label for="body">本文:</label>
                <textarea id="body" name="body" rows="5" required></textarea>
              </div>
              <button type="submit">書き込む</button>
            </form>
          </>
        ) : (
          <h1>スレッドが見つかりません</h1>
        )}
      </>
    )}
  </main>
</Layout>
<style>/* ... */</style>